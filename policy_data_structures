                         

#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace std;
using namespace __gnu_pbds;
template<class T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
void solve() {
    int q;
    cin >> q;
    oset<int> s;
    while (q--) {
        int c, t;
        cin >> c >> t;
        if (c == 1) {
            s.insert(t);
        }
        else if (c == 2) {
            // number of items strictly smaller than k
            cout << *s.find_by_order(t) << endl;
        }
        else {
            //k-th element in a set (counting from 0)
            cout << s.order_of_key(t) << endl;
        }
    }
}
int main() {
    
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

   	solve();

}
